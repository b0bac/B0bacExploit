from CoreUtils.Debug import Debug_Print
import CoreUtils.HTTPRequest
import CoreUtils.PortScanAPI
import CoreUtils.DomainAPI
import CoreUtils.DNSAPI
from Configuration.Configuration import APP_CONFIGURATION


class SubDomainScanner:
    def __init__(self, domain):
        self.sub_domain_dict = {}
        self.domain = domain

    def get_sub_domain_info(self):
        try:
            for subdomain in CoreUtils.DomainAPI.Get_SubDomain(self.domain, APP_CONFIGURATION["VirustotalToken"]):
                self.sub_domain_dict[subdomain] = {}
                try:
                    for cname in CoreUtils.DNSAPI.Get_CName_Record(subdomain):
                        self.sub_domain_dict[subdomain][cname] = {}
                        for ip in CoreUtils.DNSAPI.Get_A_Record(cname):
                            if CoreUtils.PortScanAPI.Ping(ip):
                                self.sub_domain_dict[subdomain][cname][ip] = {"webpage": []}
                                try:
                                    if CoreUtils.PortScanAPI.Port_Tcp_Scan(ip, 80):
                                        title = CoreUtils.HTTPRequest.Http_Title_Scan(ip, 80)
                                        self.sub_domain_dict[subdomain][cname][ip]["webpage"].append((80, title))
                                        print("\033[1;32m[Hit] %s %s %s %s '80' %s" %(self.domain, subdomain, cname, ip, title))
                                    if CoreUtils.PortScanAPI.Port_Tcp_Scan(ip, 443):
                                        title = CoreUtils.HTTPRequest.Http_Title_Scan(ip, 443)
                                        print("\033[1;32m[Hit] %s %s %s %s '443' %s" %(self.domain, subdomain, cname, ip, title))
                                except Exception as exception:
                                    Debug_Print("\033[1;31m[-] Unknown Failed, Reason:%s" % str(exception))
                                if len(self.sub_domain_dict[subdomain][cname][ip]["webpage"]) == 0:
                                    print("\033[1;32m[Hit] %s %s %s %s 'OPEN'" % (self.domain, subdomain, cname, ip))
                            else:
                                print("\033[1;32m[Hit] %s %s %s %s 'CLOSE'" % (self.domain, subdomain, cname, ip))
                        if len(self.sub_domain_dict[subdomain][cname].keys()) == 0:
                            print("\033[1;32m[Hit] %s %s %s" % (self.domain, subdomain, cname))
                    if len(self.sub_domain_dict[subdomain].keys()) == 0:
                        print("\033[1;32m[Hit] %s %s" % (self.domain, subdomain))
                except Exception as exception:
                    Debug_Print("\033[1;31m[-] Unknown Failed, Reason:%s" % str(exception))
                    continue
        except Exception as exception:
            Debug_Print("\033[1;31m[-] Unknown Failed, Reason:%s" % str(exception))



