from CoreUtils.WeakPasswordScannerEngine import WeakPasswordScanningEngine, ScannerRegister


class SSHPasswordScanner(WeakPasswordScanningEngine):
    def __init__(self, target):
        super().__init__(target)
        self.username_list = [username for username in open(self.username_file, 'r').readlines()]
        self.password_list = [password for password in open(self.password_file, 'r').readlines()]

    def ssh_login(self, ipaddress, port, username, password):
        import paramiko
        ssh_client = paramiko.SSHClient()
        try:
            ssh_client.connect(
                hostname=ipaddress,
                port=int(port),
                username=username,
                password=password
            )
            self.percent.write("\033[1;31m[+] 主机【%s】%s端口 存在SSH弱口令! 【%s, %s】" % (ipaddress, str(port), username, password))
            ssh_client.close()
        except Exception as exception:
            try:
                ssh_client.close()
            except Exception as exception:
                pass
            return

    def scan(self):
        argments = []
        for target in self.target:
            for username in self.username_list:
                for password in self.password_list:
                    argments.append([target[0], int(target[1]), username.split("\n")[0], password.split("\n")[0]])
        self.percent = self.percent(argments)
        for item in self.percent:
            self.thread_pool.start_new_thread(self.ssh_login, item)
        self.percent.set_description("Scanning")


ScannerRegister("SSHBrute", SSHPasswordScanner)



