import base64
import requests
from requests.auth import HTTPBasicAuth
from tqdm import tqdm
from CoreUtils.WeakPasswordScannerEngine import WeakPasswordScanningEngine, ScannerRegister


class SupervisorPasswordScanner(WeakPasswordScanningEngine):
    def __init__(self, target):
        super().__init__(target)
        self.username_list = [username for username in open(self.username_file, 'r').readlines()]
        self.password_list = [password for password in open(self.password_file, 'r').readlines()]

    def supervisor_login(self, host, port, protocol, username, password):
        import urllib3
        urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
        try:
            post_data = """<?xml version="1.0"?>
                <methodCall>
                <methodName>supervisor.getSupervisorVersion</methodName>
                </methodCall>
                """
            authorzation_string = HTTPBasicAuth(username, password)
            url = "%s://%s:%s//RPC2"%(str(protocol), str(host), str(port))
            response = requests.post(url, auth=authorzation_string, data=post_data, verify=False, timeout=5)
            if response is not None and "<methodResponse>" in response.text:
                tqdm.write("\033[1;31m[+] 主机【%s】%s端口 存在Supervisor弱口令! 【%s   %s】" % (host, str(port), username, password))
        except Exception as exception:
            pass

    def scan(self):
        self.password_list.append("")
        self.username_list.append("")
        argments = []
        for target in self.target:
            for username in self.username_list:
                for password in self.password_list:
                    argments.append([target[0], int(target[1]), target[2], username.split("\n")[0], password.split("\n")[0]])
        self.percent = self.percent(argments)
        for item in self.percent:
            self.thread_pool.start_new_thread(self.supervisor_login, item)
        self.percent.set_description("Scanning")


ScannerRegister("SupervisorBrute", SupervisorPasswordScanner)



