import binascii

from CoreUtils.WeakPasswordScannerEngine import WeakPasswordScanningEngine, ScannerRegister


class MssqlPasswordScanner(WeakPasswordScanningEngine):
    def __init__(self, target):
        super().__init__(target)
        self.username_list = [username for username in open(self.username_file, 'r').readlines()]
        self.password_list = [password for password in open(self.password_file, 'r').readlines()]

    def mssql_login(self, ipaddress, port, username, password):
        import socket
        socket.setdefaulttimeout(5)
        socket_client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        try:
            socket_client.connect((ipaddress, int(port)))
            hex_ipaddress = binascii.b2a_hex(ipaddress)
            hex_username = binascii.b2a_hex(username)
            username_length = len(username)
            password_length = len(password)
            address_length = len(ipaddress) + len(str(port)) + 1
            hex_password = binascii.b2a_hex(password)
            hex_port = binascii.b2a_hex(str(port))
            address = hex_ipaddress + b'3a' + hex_port
            # hex_host = binascii.b2a_hex(ipaddress)
            data = "0200020000000000123456789000000000000000000000000000000000000000000000000000ZZ5440000000000000000000000000000000000000000000000000000000000X3360000000000000000000000000000000000000000000000000000000000Y373933340000000000000000000000000000000000000000000000000000040301060a09010000000002000000000070796d7373716cd4c6962726172790a00000000000d1175735f656e676c69736800000000000000000000000000000201004c000000000000000000000a000000000000000000000000000069736f5f31000000000000000000000000000000000000000000000000000501353132000000030000000000000000"
            data1 = str(data).replace(data[16:16 + len(address)], str(address))
            data2 = data1.replace(data1[78:78 + len(hex_username)], str(hex_username))
            data3 = data2.replace(data2[140:140 + len(hex_password)], str(hex_password))
            if username_length >= 16:
                data4 = data3.replace('0X', str(hex(username_length)).replace('0x', ''))
            else:
                data4 = data3.replace('X', str(hex(username_length)).replace('0x', ''))
            if password_length >= 16:
                data5 = data4.replace('0Y', str(hex(password_length)).replace('0x', ''))
            else:
                data5 = data4.replace('Y', str(hex(password_length)).replace('0x', ''))
            hex_address_length = hex(address_length).replace('0x', '')
            data6 = data5.replace('ZZ', str(hex_address_length))
            data7 = binascii.a2b_hex(data6)
            socket_client.send(data7)
            packet = socket_client.recv(1024)
            if b"master" in packet:
                self.percent.write("\033[1;31m[+] 主机【%s】%s端口 存在Mssql弱口令! 【%s, %s】" % (ipaddress, str(port), username, password))
        except Exception as exception:
            pass

    def scan(self):
        argments = []
        for target in self.target:
            for username in self.username_list:
                for password in self.password_list:
                    argments.append([target[0], int(target[1]), username.split("\n")[0], password.split("\n")[0]])
        self.percent = self.percent(argments)
        for item in self.percent:
            self.thread_pool.start_new_thread(self.mssql_login, item)
        self.percent.set_description("Scanning")


ScannerRegister("MssqlBrute", MssqlPasswordScanner)



