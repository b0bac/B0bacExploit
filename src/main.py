# Import Libs, Packages, Files
import cmd2
from SensitiveInformationGather import GithubInformationGather
from Configuration.Configuration import APP_CONFIGURATION, Show_Configuration
from MachineInformationGather.PortInformationGather import Port_Scan
from SubDomainInformationGather.SubDomainInformationScanner import SubDomainScanner



# Global Variables
Banner = """\033[1;33m
  ____   ___  _                   _____       _       _ _   
 |  _ \ / _ \| |                 / ____|     | |     (_) |  
 | |_) | | | | |__   __ _  ___  | (___  _ __ | | ___  _| |_ 
 |  _ <| | | | '_ \ / _` |/ __|  \___ \| '_ \| |/ _ \| | __|
 | |_) | |_| | |_) | (_| | (__   ____) | |_) | | (_) | | |_ 
 |____/ \___/|_.__/ \__,_|\___| |_____/| .__/|_|\___/|_|\__|
                                       | |                  
                                       |_|                           
##################################################################################
#                                  B0bacSploit                                   #
#                                 Version: V1.1                                  #
#                               Copyright By b0b@c                               #
##################################################################################
"""


class B0bacSploit(cmd2.Cmd):
    """Example cmd2 application."""
    prompt = '\033[1;33m[BobacSploit]>>> '
    intro = Banner

    def __init__(self):
        super().__init__()
        del cmd2.Cmd.do_edit
        del cmd2.Cmd.do_alias
        del cmd2.Cmd.do_macro
        del cmd2.Cmd.do_run_pyscript
        del cmd2.Cmd.do_set
        del cmd2.Cmd.do_shortcuts
        del cmd2.Cmd.do_run_script

    config_parser = cmd2.Cmd2ArgumentParser()
    config_parser.add_argument('SettingKey', type=str, help='Key')
    config_parser.add_argument('SettingValue', type=str, help='Value')

    @cmd2.with_argparser(config_parser)
    def do_config(self, args):
        """Config setting Keys and Values"""
        if args.SettingKey not in APP_CONFIGURATION.keys():
            print("\033[1;31m[-] Unknown Parameters!")
            return
        APP_CONFIGURATION[args.SettingKey] = args.SettingValue
        print("\033[1;32m%s ===> %s"%(str(args.SettingKey), str(args.SettingValue)))

    show_parser = cmd2.Cmd2ArgumentParser()
    show_parser.add_argument('SettingKey', type=str, help='key')

    @cmd2.with_argparser(show_parser)
    def do_show(self, args):
        """Show setting Keys and Values"""
        try:
            value = APP_CONFIGURATION[args.SettingKey]
            print("\033[1;32m%s ===> %s" % (str(args.SettingKey), str(value)))
        except Exception as exception:
            print("\033[1;31m[-] Unknown Parameters!")
            return

    github_gather_parser = cmd2.Cmd2ArgumentParser()
    github_gather_parser.add_argument('domain', type=str, help="domain")
    github_gather_parser.add_argument('keyword', type=str, help="keyword")

    @cmd2.with_argparser(github_gather_parser)
    def do_gitscan(self, args):
        """Scan Leak Sensitive Information On Github!"""
        git_scanner = GithubInformationGather.GitHubGather()
        git_scanner.login()
        git_scanner.search(args.domain, args.keyword)

    port_scan_parser = cmd2.Cmd2ArgumentParser()
    port_scan_parser.add_argument('target', type=str, help="target")
    port_scan_parser.add_argument('port', type=str, help="port")
    port_scan_parser.add_argument('scan', type=str, help="scan type")

    @cmd2.with_argparser(port_scan_parser)
    def do_portscan(self, args):
        """Port Scan"""
        Port_Scan(args.target, args.port, args.scan)

    subdomain_scan_parser = cmd2.Cmd2ArgumentParser()
    subdomain_scan_parser.add_argument('domain', type=str, help="domain")

    @cmd2.with_argparser(subdomain_scan_parser)
    def do_subdomain(self, args):
        """Subdomain Scan"""
        # print(args.domain)
        subdomain_scanner = SubDomainScanner(args.domain)
        # print("block1")
        subdomain_scanner.get_sub_domain_info()

    show_config_parser = cmd2.Cmd2ArgumentParser()
    show_config_parser.add_argument("config", type=str, help='config')

    @cmd2.with_argparser(show_config_parser)
    def do_show(self, args):
        """Show Config"""
        Show_Configuration(args.config)

    vulnerable_scan_parser = cmd2.Cmd2ArgumentParser()
    vulnerable_scan_parser.add_argument("vulnerable", type=str, help="vulnerable")
    vulnerable_scan_parser.add_argument('target', type=str, help="target")

    @cmd2.with_argparser(vulnerable_scan_parser)
    def do_scan(self, args):
        """Vulnerable Scanning"""
        vulnerable = args.vulnerable
        target = args.target
        vulnerable_scanner_class = APP_CONFIGURATION["VulnerableDictionary"][vulnerable]
        vulnerable_scanner = vulnerable_scanner_class(target)
        vulnerable_scanner.scan()



if __name__ == "__main__":
    __import__("VulnerableScanner")
    scanner = B0bacSploit()
    scanner.cmdloop()